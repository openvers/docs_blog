<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on OpenVERS</title><link>https://openvers.github.io/docs_blog/tags/github/</link><description>Recent content in Github on OpenVERS</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 03 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://openvers.github.io/docs_blog/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/openid_connect/</guid><description>OpenID Connect (OIDC) with GitHub Actions and Azure Workload Identity Federation Azure&amp;rsquo;s Workload identity federation allows external OpenID Connect (OIDC) providers, like GitHub Actions, to authenticate to Azure Active Directory (Azure AD) and obtain access tokens for Azure resources. This is achieved by configuring a federated identity credential on an Azure AD application registration or user-assigned managed identity. This enables your GitHub Actions workflows to securely access Azure resources without needing to manage or store long-lived secrets (like client secrets or certificates) in GitHub.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/openid_connect/</guid><description>OpenID Connect (OIDC) with GitHub Actions and GCP Workload Identity Federation Google Cloud&amp;rsquo;s Workload Identity Federation allows identities from external OpenID Connect (OIDC) providers, like GitHub Actions, to impersonate Google Cloud service accounts. This enables your GitHub Actions workflows to securely access GCP resources without needing to manage or store long-lived service account keys in GitHub. Instead, workflows obtain short-lived access tokens, enhancing security and simplifying credential management for CI/CD pipelines.</description></item><item><title>Github</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/github/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/github/</guid><description>Having a GitHub organization is crucial for Data Practioners and Businesses because it centralizes and manages code repositories under one cohesive structure. It allows for better collaboration by giving multiple users access to shared projects while maintaining control over permissions and visibility. Instead of individual repositories scattered across personal accounts, a Github Organization allows projects to be consolidated in a secure and professional environment. This structure is essential for large projects where multiple contributors, such as developers, designers, and project managers, need to collaborate efficiently while ensuring that intellectual property and source code are well-organized and protected.</description></item></channel></rss>