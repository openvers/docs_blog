<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenID Connect on OpenVERS</title><link>https://openvers.github.io/docs_blog/categories/openid-connect/</link><description>Recent content in OpenID Connect on OpenVERS</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 03 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://openvers.github.io/docs_blog/categories/openid-connect/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/openid_connect/</guid><description>OpenID Connect Configuration with Github OpenID Connect (OIDC) is an authentication protocol that enables AWS to securely authenticate users and applications without requiring them to store and manage credentials, allowing for seamless integration with identity providers such as Google, Microsoft, Amazon and Github to providing a seamless and highly secure way to manage access to AWS resources.
CLI Steps Examples: CLI (Create) CLI (Destroy) mkdir ~/development/test/example_aws_oidc cd ~/development/test/example_aws_oidc # Setting export GH_REPO=&amp;#34;your-github-repo-name&amp;#34; # Login to AWS root account aws sso login --profile=sso-admin # Create New User # https://awscli.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/openid_connect/</guid><description>OpenID Connect (OIDC) with GitHub Actions and Azure Workload Identity Federation Azure&amp;rsquo;s Workload identity federation allows external OpenID Connect (OIDC) providers, like GitHub Actions, to authenticate to Azure Active Directory (Azure AD) and obtain access tokens for Azure resources. This is achieved by configuring a federated identity credential on an Azure AD application registration or user-assigned managed identity. This enables your GitHub Actions workflows to securely access Azure resources without needing to manage or store long-lived secrets (like client secrets or certificates) in GitHub.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/openid_connect/</guid><description>OpenID Connect (OIDC) with GitHub Actions and GCP Workload Identity Federation Google Cloud&amp;rsquo;s Workload Identity Federation allows identities from external OpenID Connect (OIDC) providers, like GitHub Actions, to impersonate Google Cloud service accounts. This enables your GitHub Actions workflows to securely access GCP resources without needing to manage or store long-lived service account keys in GitHub. Instead, workflows obtain short-lived access tokens, enhancing security and simplifying credential management for CI/CD pipelines.</description></item></channel></rss>