<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Setup on OpenVERS</title><link>https://openvers.github.io/docs_blog/categories/setup/</link><description>Recent content in Setup on OpenVERS</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 13 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://openvers.github.io/docs_blog/categories/setup/index.xml" rel="self" type="application/rss+xml"/><item><title>Account Setup</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/new_account_setup/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/new_account_setup/</guid><description>Setup New Account Creating an AWS account can be done free of charge. More details about registering with AWS can be found at their New Account Instructions web page. We also need to keep in mind securing protective measures against our newly created users to protect our resources and data from possible breaches and mailicous actors, and therefore we follow some elementary guidelines documented by AWS for securing new user setup.</description></item><item><title>Account Setup</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/new_account_setup/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/new_account_setup/</guid><description>Setup New Azure Account Creating an Azure account can often start with a free tier offering. Similar to other cloud providers, establishing robust security measures from the beginning is crucial to protect your Azure resources, data, and identities from unauthorized access and potential threats. We will follow Azure&amp;rsquo;s recommended practices for a secure initial setup.
Azure Resource Groups Azure resource groups are a fundamental concept in Azure to organize resource into specific use case groups for cost and monitoring purposes.</description></item><item><title>Account Setup</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/new_account_setup/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/new_account_setup/</guid><description>Setup New Account Creating a Google Cloud Platform (GCP) presence starts with a Google Account. If you don&amp;rsquo;t have one, you can create one for free. You&amp;rsquo;ll then create a &amp;ldquo;Project&amp;rdquo; within GCP to organize your resources. Billing is managed through a &amp;ldquo;Billing Account&amp;rdquo; linked to your projects. More details can be found at the GCP Get Started page. It&amp;rsquo;s critical to implement robust security measures from the outset to protect your GCP resources and data from unauthorized access and potential breaches.</description></item><item><title>Cloud Setup</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/</guid><description>Getting Started In todayâ€™s rapidly evolving technology landscape, a proper setup using platform favorites like GitHub, Terraform.io, and top cloud providers like Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP) is essential for meeting the demands of modern infrastructure, development, and data needs. These tools work together to enable scalable, secure, and efficient cloud environments, facilitating everything from code management to automated infrastructure provisioning.
Importance A proper setup is crucial for several reasons.</description></item><item><title>Terraform Backend</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/terraform_backend/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/terraform_backend/</guid><description>Terrafrom Backend with AWS Using AWS as the backend for Terraform state is another versatile option for managing infrastructure as code. By storing Terraform state in an AWS S3 bucket, teams can take advantage of AWS&amp;rsquo;s robust security features, such as encryption at rest and in transit, access controls, and versioning. Additionally, AWS S3 provides a highly durable and available storage solution, ensuring that Terraform state is always accessible and up-to-date.</description></item><item><title>Terraform Backend</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/terraform_backend/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/terraform_backend/</guid><description>Terraform Backend with Azure Using Azure as the backend for Terraform state is a robust and versatile option for managing infrastructure as code. By storing Terraform state in an Azure Blob Storage container, teams can leverage Azure&amp;rsquo;s comprehensive security features, including encryption at rest and in transit, access controls via Azure Active Directory (Azure AD) and Role-Based Access Control (RBAC), and versioning capabilities. Azure Blob Storage offers a highly durable and available storage solution, ensuring that Terraform state is consistently accessible and protected.</description></item><item><title>Terraform Backend</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/terraform_backend/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/terraform_backend/</guid><description>Terraform Backend with Google Cloud Storage Using Google Cloud Storage (GCS) as the backend for Terraform state is a robust and common practice for managing infrastructure as code on GCP. By storing Terraform state in a GCS bucket, teams can benefit from Google Cloud&amp;rsquo;s strong security features, such as encryption at rest and in transit, fine-grained access control with IAM, and object versioning for state history and recovery. GCS provides a highly durable and available storage solution, ensuring that Terraform state is consistently accessible.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/openid_connect/</guid><description>OpenID Connect Configuration with Github OpenID Connect (OIDC) is an authentication protocol that enables AWS to securely authenticate users and applications without requiring them to store and manage credentials, allowing for seamless integration with identity providers such as Google, Microsoft, Amazon and Github to providing a seamless and highly secure way to manage access to AWS resources.
CLI Steps Examples: CLI (Create) CLI (Destroy) mkdir ~/development/test/example_aws_oidc cd ~/development/test/example_aws_oidc # Setting export GH_REPO=&amp;#34;your-github-repo-name&amp;#34; # Login to AWS root account aws sso login --profile=sso-admin # Create New User # https://awscli.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/openid_connect/</guid><description>OpenID Connect (OIDC) with GitHub Actions and Azure Workload Identity Federation Azure&amp;rsquo;s Workload identity federation allows external OpenID Connect (OIDC) providers, like GitHub Actions, to authenticate to Azure Active Directory (Azure AD) and obtain access tokens for Azure resources. This is achieved by configuring a federated identity credential on an Azure AD application registration or user-assigned managed identity. This enables your GitHub Actions workflows to securely access Azure resources without needing to manage or store long-lived secrets (like client secrets or certificates) in GitHub.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/openid_connect/</guid><description>OpenID Connect (OIDC) with GitHub Actions and GCP Workload Identity Federation Google Cloud&amp;rsquo;s Workload Identity Federation allows identities from external OpenID Connect (OIDC) providers, like GitHub Actions, to impersonate Google Cloud service accounts. This enables your GitHub Actions workflows to securely access GCP resources without needing to manage or store long-lived service account keys in GitHub. Instead, workflows obtain short-lived access tokens, enhancing security and simplifying credential management for CI/CD pipelines.</description></item><item><title>Github</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/github/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/github/</guid><description>Having a GitHub organization is crucial for Data Practioners and Businesses because it centralizes and manages code repositories under one cohesive structure. It allows for better collaboration by giving multiple users access to shared projects while maintaining control over permissions and visibility. Instead of individual repositories scattered across personal accounts, a Github Organization allows projects to be consolidated in a secure and professional environment. This structure is essential for large projects where multiple contributors, such as developers, designers, and project managers, need to collaborate efficiently while ensuring that intellectual property and source code are well-organized and protected.</description></item><item><title>Terraform.io</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/terraform_io/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/terraform_io/</guid><description>Terraform is a powerful infrastructure-as-code (IaC) tool that enables users to automate the provisioning, management, and scaling of infrastructure across various cloud providers such as AWS, Azure, and Google Cloud, as well as on-premise environments. With its declarative configuration language, Terraform allows users to define infrastructure in reusable code that can be versioned and shared, ensuring consistency and reducing manual errors. One of its key capabilities is the use of state files, which track the infrastructure&amp;rsquo;s current state, enabling Terraform to apply only necessary changes when updating resources.</description></item><item><title>Amazon Web Services (AWS)</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/</link><pubDate>Sat, 26 Oct 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/</guid><description>AWS (Amazon Web Services) is a comprehensive cloud computing platform provided by Amazon that offers a wide range of services, including computing, storage, databases, analytics, machine learning, and more. AWS allows data practioners to build, deploy, and manage applications and workloads in a flexible, scalable, and secure manner on their cloud platform. When setting up AWS for the first time, security requirements are essential for data practitioners to ensure the confidentiality and integrity their data and applications.</description></item><item><title>Microsoft Azure</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/</link><pubDate>Sat, 26 Oct 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/azure/</guid><description>Microsoft Azure is a comprehensive cloud computing platform that offers a wide array of services, including computing, storage, databases, analytics, artificial intelligence, Internet of Things (IoT), and more. Azure enables data practitioners and developers to build, deploy, and manage applications and workloads in a flexible, scalable, and secure global network. When setting up Azure for the first time, establishing robust security measures is paramount for data practitioners to ensure the confidentiality, integrity, and availability of their data and applications.</description></item><item><title>Google Cloud Platform (GCP)</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/</link><pubDate>Sat, 26 Oct 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/gcp/</guid><description>GCP (Google Cloud Platform) is a comprehensive suite of cloud computing services offered by Google. It provides a wide array of services, including computing, storage, databases, big data analytics, machine learning, and more. GCP enables data practitioners to build, deploy, and manage applications and workloads in a flexible, scalable, and secure environment. When setting up GCP for the first time, focusing on security is paramount for data practitioners to ensure the confidentiality and integrity of their data and applications.</description></item></channel></rss>