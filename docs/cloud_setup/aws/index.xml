<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Amazon Web Services (AWS) on OpenVERS</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/</link><description>Recent content in Amazon Web Services (AWS) on OpenVERS</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 26 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://openvers.github.io/docs_blog/docs/cloud_setup/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Account Setup</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/new_account_setup/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/new_account_setup/</guid><description>Setup New Account Creating an AWS account can be done free of charge. More details about registering with AWS can be found at their New Account Instructions web page. We also need to keep in mind securing protective measures against our newly created users to protect our resources and data from possible breaches and mailicous actors, and therefore we follow some elementary guidelines documented by AWS for securing new user setup.</description></item><item><title>Terraform Backend</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/terraform_backend/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/terraform_backend/</guid><description>Terrafrom Backend with AWS Using AWS as the backend for Terraform state is another versatile option for managing infrastructure as code. By storing Terraform state in an AWS S3 bucket, teams can take advantage of AWS&amp;rsquo;s robust security features, such as encryption at rest and in transit, access controls, and versioning. Additionally, AWS S3 provides a highly durable and available storage solution, ensuring that Terraform state is always accessible and up-to-date.</description></item><item><title>OpenID Connect</title><link>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/openid_connect/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://openvers.github.io/docs_blog/docs/cloud_setup/aws/openid_connect/</guid><description>OpenID Connect Configuration with Github OpenID Connect (OIDC) is an authentication protocol that enables AWS to securely authenticate users and applications without requiring them to store and manage credentials, allowing for seamless integration with identity providers such as Google, Microsoft, Amazon and Github to providing a seamless and highly secure way to manage access to AWS resources.
CLI Steps Examples: CLI (Create) CLI (Destroy) mkdir ~/development/test/example_aws_oidc cd ~/development/test/example_aws_oidc # Setting export GH_REPO=&amp;#34;your-github-repo-name&amp;#34; # Login to AWS root account aws sso login --profile=sso-admin # Create New User # https://awscli.</description></item></channel></rss>